{"version":3,"sources":["images sync /^/.*$","images/Anj1.JPG","images/Anj2.PNG","images/Anj3.JPG","images/Anj4.PNG","images/Anj5.JPG","images/Anj6.JPG","images/Anj7.JPG","images/frnd.jpg","ListItem.js","Anjana.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ListItem","props","listItems","items","item","className","key","type","value","text","onChange","setUpdate","target","onClick","deleteItems","icon","duration","easing","Anjana","images","image","src","require","listItem","library","add","faTrash","App","state","anjana","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","anjana_as","toUpperCase","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.999f0f1d.chunk.js","sourcesContent":["var map = {\n\t\"./Anj1.JPG\": 30,\n\t\"./Anj2.PNG\": 31,\n\t\"./Anj3.JPG\": 32,\n\t\"./Anj4.PNG\": 33,\n\t\"./Anj5.JPG\": 34,\n\t\"./Anj6.JPG\": 35,\n\t\"./Anj7.JPG\": 36,\n\t\"./frnd.jpg\": 37\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/Anj1.8fb77443.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Anj2.a9dc0f5c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Anj3.0f2d2e82.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Anj4.0c9717a9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Anj5.2a4565b4.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Anj6.cd28dec8.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Anj7.86d942d0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/frnd.d9755ae6.jpg\";","import React from 'react';\nimport './ListItem.css';\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nconst ListItem = (props) => {\n    const items = props.items;\n    const listItems = items.map(item => {\n        return (<div className=\"list\" key={item.key}>\n            <p>\n            <input type=\"text\" \n            id={item.key}\n            value={item.text}\n            onChange={(e) => props.setUpdate(e.target.value, item.key)} />\n             <span>\n            <FontAwesomeIcon onClick={() => props.deleteItems(item.key)} className=\"faicons\" icon=\"trash\"/>\n        </span></p>\n            \n        </div>)\n    })\n\n    return (\n        <div>\n        <FlipMove duration={300} easing=\"ease-in-out\">\n        {listItems}\n        </FlipMove>\n        </div>\n    )\n    \n}\n\nexport default ListItem\n","import React from 'react'\nimport './Anjana.css';\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nconst Anjana = ({deleteItems, items}) => {\n    const imgName = ['Anj1.JPG', 'Anj2.PNG', 'Anj3.JPG', 'Anj4.PNG', 'Anj5.JPG', 'Anj6.JPG', 'Anj7.JPG', 'frnd.jpg'];\n    const images = imgName.map(image => {\n        return <img key={image} src={require(`./images/${image}`)} className=\"img-style\" />\n    });\n    \n    const listItem = (<div className=\"img-container\">\n    <p>Hello Anjusee</p>\n            {images}\n        </div>)\n\n    return (\n        <div>\n        <FlipMove duration={800} easing=\"ease-in-out\">\n        {listItem}\n        </FlipMove>\n        </div>\n    )\n}\n\nexport default Anjana\n","import React from 'react';\nimport './App.css';\nimport ListItem from './ListItem';\nimport Anjana from './Anjana';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      anjana: false,\n      currentItem: {\n        text: '',\n        key: '',\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem)\n    if (newItem.text !== \"\") {\n      const anjana = 'anjana as';\n      const anjana_as = (newItem.text.toUpperCase() === anjana.toUpperCase()) ? newItem.text.toUpperCase() : null;\n      const newItems = [...this.state.items, newItem ];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        },\n        anjana: (anjana_as) ? true : false\n      })\n    }\n  }\n\n  deleteItems(key) {\n    const filteredItems = this.state.items.filter(item => \n      item.key !== key\n    );\n    this.setState({\n      items: filteredItems\n    })\n  }\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n        if (item.key === key) {\n          item.text = text;\n        }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      \n      <div className=\"App\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" \n          value={this.state.currentItem.text} \n          onChange={this.handleInput}\n          placeholder=\"Enter Text\" />\n          <button type=\"submit\">Add</button>\n      </form>\n      </header>\n      { !this.state.anjana ? \n        <ListItem setUpdate={this.setUpdate} deleteItems={this.deleteItems} items = {this.state.items}/>\n      : <Anjana deleteItems={this.deleteItems} items = {this.state.items}/> }\n      \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}